services:

  api:
    profiles: [ "api" ]
    container_name: litestar.api
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      # target: production
    expose:
      - "8000"
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./config:/app/config:ro
    networks:
      - litestar.mongo.network
      - litestar.kafka.network
    environment:
      - CONFIG_PATH=${CONFIG_PATH:-./config/prod_config.toml}
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -fsSL http://localhost:8000/healthcheck/"]
    #   interval: 10s
    #   timeout: 60s
    #   retries: 5
    #   start_period: 10s

  mongodb:
    profiles: [ "api" ]
    container_name: litestar.mongodb
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - litestar.mongodb.data:/data/db
    networks:
      - litestar.mongo.network

  mongo-express:
    profiles: [ "api" ]
    container_name: litestar.mongo-express
    image: mongo-express
    restart: unless-stopped
    ports:
      - "28081:8081"
    networks:
      - litestar.mongo.network
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_DB_ADMIN_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_DB_ADMIN_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MONGO_DB_CONNECTION_URI}
    depends_on:
       - mongodb

  zookeeper:
    profiles: [ "api", "kafka" ]
    image: confluentinc/cp-zookeeper:latest
    container_name: main-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - litestar.kafka.network

  kafka:
    profiles: [ "api", "kafka" ]
    image: confluentinc/cp-kafka:latest
    container_name: main-kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - litestar.kafka.network

  kafka-ui:
    profiles: [ "api", "kafka" ]
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper
    networks:
      - litestar.kafka.network


volumes:
  litestar.mongodb.data:


networks:
  litestar.mongo.network:
  litestar.kafka.network:
